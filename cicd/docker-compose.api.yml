version: '3.8'

services:
  # API-only service (lightweight FastAPI)
  api-service:
    build:
      context: ..
      dockerfile: cicd/Dockerfile.api
    ports:
      - "8080:8000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=customer_support
      - DB_USER=admin
      - DB_PASSWORD=password
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../logs:/app/logs
    env_file:
      - ../.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # PostgreSQL database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: customer_support
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d customer_support"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching (optional for API)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
