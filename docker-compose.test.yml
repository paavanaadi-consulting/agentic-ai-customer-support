version: '3.8'

# Lightweight Docker Compose for A2A Local Testing
# Run with: docker-compose -f docker-compose.test.yml up

services:
  # Test Database
  postgres-test:
    image: postgres:15
    environment:
      POSTGRES_DB: customer_support_test
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - ./data/postgres_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d customer_support_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Test Kafka
  zookeeper-test:
    image: bitnami/zookeeper:3.8
    ports:
      - "2182:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: unless-stopped

  kafka-test:
    image: bitnami/kafka:3.6
    ports:
      - "9093:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-test:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-test
    restart: unless-stopped

  # Test Redis
  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    restart: unless-stopped

  # MCP Database Server for Testing
  mcp-database-test:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "8001:8001"
    environment:
      - MCP_SERVER_TYPE=database
      - MCP_SERVER_PORT=8001
      - DATABASE_URL=postgresql://admin:password@postgres-test:5432/customer_support_test
    depends_on:
      postgres-test:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    command: ["python", "scripts/start_mcp_servers.py", "--server", "database"]
    restart: unless-stopped

  # MCP Kafka Server for Testing
  mcp-kafka-test:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "8002:8002"
    environment:
      - MCP_SERVER_TYPE=kafka
      - MCP_SERVER_PORT=8002
      - KAFKA_BOOTSTRAP_SERVERS=kafka-test:9092
    depends_on:
      - kafka-test
    volumes:
      - ./logs:/app/logs
    command: ["python", "scripts/start_mcp_servers.py", "--server", "kafka"]
    restart: unless-stopped

volumes:
  pgdata-test:
