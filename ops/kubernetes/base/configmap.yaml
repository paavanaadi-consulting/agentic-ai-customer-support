apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: agentic-ai-support
data:
  # Application Configuration
  LOG_LEVEL: "INFO"
  ENVIRONMENT: "production"
  
  # API Configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  API_WORKERS: "4"
  
  # MCP Server URLs
  MCP_POSTGRES_URL: "http://mcp-postgres-service:8001"
  MCP_KAFKA_URL: "http://mcp-kafka-service:8002"
  MCP_AWS_LAMBDA_URL: "http://mcp-aws:8766"
  MCP_AWS_MESSAGING_URL: "http://mcp-aws:8767"
  MCP_AWS_MQ_URL: "http://mcp-aws:8768"
  
  # AWS Configuration
  AWS_REGION: "us-east-1"
  
  # Kafka Configuration
  KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
  KAFKA_CONSUMER_GROUP: "agentic-ai-consumer"
  KAFKA_TOPIC_PREFIX: "customer-support"
  
  # Database Configuration
  POSTGRES_HOST: "postgres"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "customer_support"
  
  # Vector Database Configuration
  QDRANT_HOST: "qdrant"
  QDRANT_PORT: "6333"
  QDRANT_COLLECTION: "customer_support"
  
  # Redis Configuration (for caching)
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  
  # Health Check Configuration
  HEALTH_CHECK_INTERVAL: "30"
  HEALTH_CHECK_TIMEOUT: "10"
  
  # Performance Configuration
  BATCH_SIZE: "100"
  POLL_INTERVAL: "1.0"
  CONNECTION_POOL_SIZE: "20"
  
  # Feature Flags
  ENABLE_METRICS: "true"
  ENABLE_TRACING: "true"
  ENABLE_GENETIC_EVOLUTION: "true"
