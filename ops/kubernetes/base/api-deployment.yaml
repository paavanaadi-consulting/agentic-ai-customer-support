apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: agentic-ai-support
  labels:
    app.kubernetes.io/component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api
        app.kubernetes.io/component: api
    spec:
      containers:
      - name: api
        image: agentic-ai-api:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: API_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: LOG_LEVEL
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DATABASE_URL
        - name: MCP_SERVER_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MCP_POSTGRES_URL
        - name: KAFKA_MCP_SERVER_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MCP_KAFKA_URL
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: OPENAI_API_KEY
              optional: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 12
      restartPolicy: Always
